{"version":3,"sources":["Components/Button/Button.jsx","App.jsx","Components/Result.jsx","Components/MathOperations.jsx","Components/FuncButtons.jsx","Components/Numbers.jsx","index.js"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","toString","onContentClear","onDelete","console","log","slice","onChange","c","onClickNumber","number","onClickOperation","operation","onClickEqual","equal","eval","Result","defaultProps","operators","MathOperations","map","operator","index","FuncButtons","nums","Numbers","num","disableRipple","ReactDOM","render","document","getElementById"],"mappings":"0GAAA,sBAuBeA,IAnBA,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,aACxB,OACI,wBACIC,UAAYH,EACZI,QAAU,WACNF,EAAaD,IAHrB,SAMI,qCAAQA,EAAR,W,iyCCCZ,SAASI,MAAO,IAAD,UACaC,oDAAS,KADtB,gOACNC,MADM,cACCC,SADD,cAEPC,MAAQC,oDAAMH,MAAM,gBACpBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,EAEzD,OACE,oEAAMT,UAAY,mBAAlB,UAEE,2DAAC,kDAAD,CAAQQ,MAAOA,MAAME,aACrB,2DAAC,uDAAD,CACEC,eAAkB,kBAAMN,SAAS,MACjCO,SAAkB,WACaR,MAAMK,OAAS,IAChBI,QAAQC,IAAI,UACZT,SAAiB,MAARD,MAAeC,SAAS,KAAOD,MAAMW,MAAM,EAAEX,MAAMK,OAAO,MAGjGO,SAAkB,SAAAC,GAAC,OAAIJ,QAAQC,IAAIG,MAErC,2DAAC,mDAAD,CACEC,cAAiB,SAAAC,GAAM,OAAmCd,SAAtB,MAARD,OAAwB,MAATe,EAAwBA,EAAmBf,MAAMe,MAG9F,2DAAC,0DAAD,CACEC,iBAAoB,SAAAC,GACkBR,QAAQC,IAAR,gBACAT,SAAS,GAAD,OAAID,OAAJ,OAAYiB,KAE1DC,aAAoB,sBAAAC,OACYV,QAAQC,IAAI,UAAUS,OACtBlB,SAASmB,KAAKpB,OAAOM,kBAS9CR,2B,8BCpDf,gBAGMuB,EAAS,SAAC,GAAY,IAAXjB,EAAU,EAAVA,MASb,OACE,qBAAKR,UAAU,SAAf,SACG,+BAAOQ,OAYhBiB,EAAOC,aAAc,CACnBlB,MAAQ,KAEKiB,O,6BC7Bf,uBAIME,EAAY,CAAC,IAAI,IAAI,IAAI,KAmBhBC,IAjBQ,SAAC,GAAD,IAAER,EAAF,EAAEA,iBAAkBE,EAApB,EAAoBA,aAApB,OACf,0BAAStB,UAAU,kBAAnB,UAEQ2B,EAAUE,KAAI,SAACC,EAAUC,GAAX,OACV,cAAC,IAAD,CAAoCjC,KAAQgC,EAAW/B,aAAcqB,GAArE,mBAA2BW,OAGnC,cAAC,IAAD,CAAQjC,KAAO,IAAKC,aAAcuB,S,6BCb9C,uBAkBeU,IAdK,SAAC,GAAD,IAAErB,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,SAAUI,EAA5B,EAA4BA,SAA5B,OACZ,0BAAShB,UAAU,YAAnB,UACK,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAO,IAAIC,aAAgBY,IAC3D,cAAC,IAAD,CAASd,KAAK,mBAAmBC,KAAO,KAAKC,aAAgBa,IAC7D,cAAC,IAAD,CAAQf,KAAK,mBAAmBC,KAAO,MAAMC,aAAgBiB,S,6BCR1E,uBAIMiB,EAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAiBvCC,IAfC,SAAC,GAAD,IAAEhB,EAAF,EAAEA,cAAF,OACR,yBAASlB,UAAU,UAAnB,SAEQiC,EAAKJ,KAAI,SAACM,EAAKJ,GAAN,OACL,cAAC,IAAD,CAAQK,eAAa,EAA6BtC,KAAQqC,EAAKpC,aAAgBmB,GAA/E,qBAAyCa,W,8BCV7D,sDAKAM,IAASC,OAEL,cAAC,IAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.859faabc.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\nconst Button = ({type,text, clickHandler}) =>{\r\n    return (\r\n        <button \r\n            className= {type} \r\n            onClick= {() =>{\r\n                clickHandler(text)\r\n            }}\r\n        >\r\n            <span> {text} </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    type         : PropTypes.string,\r\n    text         : PropTypes.string.isRequired,\r\n    clickHandler : PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button","\n/* eslint no-eval:0 */\n\nimport React, {useState} from 'react' \nimport './style/calc.css';\nimport words from 'lodash.words'\n\nimport Result from './Components/Result'\nimport MathOperations from './Components/MathOperations'\nimport FuncButtons from './Components/FuncButtons'\nimport Numbers from './Components/Numbers'\n\n\nfunction App() {\n  const [stack, setStack] = useState('0');\n  const items = words(stack,/[^-^+^*^/]+/g)\n  const value = items.length > 0 ? items[items.length-1] : 0;\n\n  return (\n    <main className = 'react-calculator'>\n     \n      <Result value={value.toString()} />\n      <FuncButtons \n        onContentClear = {() => setStack('0')}\n        onDelete       = {() => {\n                                    if(stack.length > 0){\n                                      console.log('delete');\n                                      setStack(stack==='0' ?  setStack('0') : stack.slice(0,stack.length-1));\n                                    }\n                                }}\n        onChange       = {c => console.log(c)}\n      />\n      <Numbers \n        onClickNumber = {number => (stack==='0' && number!=='.' ? setStack(number) : setStack(stack+number))}\n      />\n      \n      <MathOperations \n        onClickOperation = {operation => {\n                                              console.log(`OperaciÃ³n`);\n                                              setStack(`${stack}${operation}`);\n                                          }} \n        onClickEqual     = {equal => {\n                                        console.log(\"Igual: \",equal);\n                                        setStack(eval(stack).toString())\n                                      }}\n      />\n      \n    </main>\n    \n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Result = ({value} )=>{\r\n  \r\n  //const {user,active,value} = props; //destructurin \r\n // console.log(props);\r\n\r\n  /*console.log(\"el usuario es: \",user);\r\n  console.log(\"el usuario esta activo: \",active);\r\n  console.log(\"el valor es: \",value);*/\r\n\r\n    return(\r\n      <div className=\"result\">\r\n         <span>{value}</span> \r\n\r\n\r\n      </div>\r\n    )\r\n}\r\n    \r\nResult.propTypes ={\r\n  value : PropTypes.string.isRequired,\r\n \r\n}\r\n\r\nResult.defaultProps ={\r\n  value : \"0\",\r\n}\r\nexport default Result","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button/Button'\n\nconst operators = ['*','/','-','+']\n\nconst MathOperations = ({onClickOperation, onClickEqual}) =>(\n        <section className='math-operations'>\n            {\n                operators.map((operator, index) => (\n                    <Button key = {`btn-oper-${index}`} text = {operator}  clickHandler={onClickOperation} />  \n                ))\n            }\n            <Button text = '='  clickHandler={onClickEqual} />\n        </section>\n    );\n\n\nMathOperations.propTypes = {\n    onClickOperation : PropTypes.func.isRequired,\n    onClickEqual : PropTypes.func.isRequired\n}\n\nexport default MathOperations\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button/Button'\n\nconst FuncButtons = ({onContentClear, onDelete, onChange}) => (\n        <section className='functions'>\n             <Button type=\"button-long-text\" text = 'C' clickHandler = {onContentClear}/>\n             <Button  type=\"button-long-text\" text = 'CE' clickHandler = {onDelete}/>\n             <Button type=\"button-long-text\" text = '+/-' clickHandler = {onChange}/>\n        </section>\n    )\n\nFuncButtons.propTypes = {\n    onContentClear : PropTypes.func.isRequired,\n    onDelete       : PropTypes.func.isRequired,\n    onChange       : PropTypes.func.isRequired\n}\n\nexport default FuncButtons\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button/Button'\n\nconst nums = ['7','8','9','4','5','6','1','2','3','0','.'];\n\nconst Numbers = ({onClickNumber}) => (\n        <section className='numbers'>\n            {\n                nums.map((num, index) => (\n                    <Button disableRipple key={`btn-number-${index}`} text = {num} clickHandler = {onClickNumber}/>\n                ))\n            }\n        </section>\n)\n\n\nNumbers.propTypes = {\n    onClickNumber : PropTypes.func.isRequired\n}\n\nexport default Numbers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}